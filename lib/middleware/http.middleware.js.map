{"version":3,"sources":["../../src/middleware/http.middleware.js"],"names":["httpMiddleware","http","ctx","next","routers","koahub","configs","router","regexp","regres","key","url","path","method","params","keys","length","kk","exec","k","name","parseInt","isString","query","routerMethod","toLowerCase","skip"],"mappings":";;;;;;;;;;;;;;;;;;QAQgBA,c,GAAAA,c;;AARhB;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA;AACO,SAASA,cAAT,GAA0B;;AAE7B,QAAMC;AAAA,8EAAO,iBAAgBC,GAAhB,EAAqBC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,mCAFG,GAEOC,OAAOC,OAAP,CAAeC,MAFtB;AAILC,kCAJK,WAIGC,MAJH,WAIWC,GAJX,WAIgBC,GAJhB,WAIqBC,IAJrB,WAI2BC,MAJ3B,GAIoCX,IAAIW,MAJxC,EAKLC,MALK,GAKI,EALJ,EAMLC,IANK,GAME,EANF;;AAAA,kCAQLX,WAAWA,QAAQY,MARd;AAAA;AAAA;AAAA;;AAAA,qEASUZ,OATV;;AAAA;AAAA;AAAA;AAAA;AAAA;;AASIa,8BATJ;;AAUDT,qCAAS,4BAAaJ,QAAQ,CAAR,CAAb,EAAyBW,IAAzB,CAAT;AACAN,qCAASD,OAAOU,IAAP,CAAYhB,IAAIU,IAAhB,CAAT;;AAXC,iCAaGH,MAbH;AAAA;AAAA;AAAA;;AAcG,iCAASU,CAAT,IAAcJ,IAAd,EAAoB;AAChBD,uCAAOC,KAAKI,CAAL,EAAQC,IAAf,IAAuBX,OAAOY,SAASF,CAAT,IAAc,CAArB,CAAvB;AACH;AACDT,kCAAMO,EAAN;AAjBH;;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAsBDP,GAtBC;AAAA;AAAA;AAAA;;AAuBKH,kCAvBL,GAuBcH,QAAQM,GAAR,EAAa,CAAb,CAvBd;;AAwBD,gCAAI,iBAAOY,QAAP,CAAgBf,MAAhB,CAAJ,EAA6B;AACzBK,uCAAOL,MAAP;AACAI,sCAAMJ,SAAS,yBAAc,gBAASL,IAAIS,GAAb,EAAkBY,KAAhC,EAAuCT,MAAvC,CAAf;AACH,6BAHD,MAGO;AACGU,4CADH,GACkBjB,OAAOM,OAAOY,WAAP,EAAP,CADlB;;AAEH,oCAAID,YAAJ,EAAkB;AACdZ,2CAAOY,YAAP;AACAb,0CAAMa,eAAe,yBAAc,gBAAStB,IAAIS,GAAb,EAAkBY,KAAhC,EAAuCT,MAAvC,CAArB;AACH,iCAHD,MAGO;AACH,mDAAU,kBAAV;AACH;AACJ;;AAnCA;AAAA,mCAqCK,qBAAU,sBAAcZ,GAAd,EAAmB,EAACU,MAAMA,IAAP,EAAaD,KAAKA,GAAlB,EAAnB,CAAV,EAAsDR,IAAtD,CArCL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mCAuCK,qBAAUD,GAAV,EAAeC,IAAf,CAvCL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mCA0CC,qBAAUD,GAAV,EAAeC,IAAf,CA1CD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AAAA;AAAA;AAAA;AAAA,OAAN;;AA8CAF,SAAKyB,IAAL;;AAEA,WAAOzB,IAAP;AACH","file":"http.middleware.js","sourcesContent":["import {parse as urlParse} from \"url\";\nimport pathToRegexp from \"path-to-regexp\";\nimport lodash from \"lodash\";\nimport skip from \"./skip.middleware\";\nimport {http as httpDebug} from \"./../util/log.util\";\nimport {runAction, urlObjToParam} from \"./../util/http.util\";\n\n// run http\nexport function httpMiddleware() {\n\n    const http = async function (ctx, next) {\n\n        const routers = koahub.configs.router;\n\n        let regexp, regres, key, url, path, method = ctx.method,\n            params = [],\n            keys = [];\n\n        if (routers && routers.length) {\n            for (let kk in routers) {\n                regexp = pathToRegexp(routers[0], keys);\n                regres = regexp.exec(ctx.path);\n\n                if (regres) {\n                    for (var k in keys) {\n                        params[keys[k].name] = regres[parseInt(k) + 1];\n                    }\n                    key = kk;\n                    break;\n                }\n            }\n\n            if (key) {\n                const router = routers[key][1];\n                if (lodash.isString(router)) {\n                    path = router;\n                    url = router + urlObjToParam(urlParse(ctx.url).query, params);\n                } else {\n                    const routerMethod = router[method.toLowerCase()];\n                    if (routerMethod) {\n                        path = routerMethod;\n                        url = routerMethod + urlObjToParam(urlParse(ctx.url).query, params);\n                    } else {\n                        httpDebug('Not Found Router');\n                    }\n                }\n\n                await runAction(Object.assign(ctx, {path: path, url: url}), next);\n            } else {\n                await runAction(ctx, next);\n            }\n        } else {\n            await runAction(ctx, next);\n        }\n    };\n\n    http.skip = skip;\n\n    return http;\n}\n"]}