{"version":3,"sources":["../../src/lib/hook.class.js"],"names":["runAction","Hook","constructor","ctx","next","hooks","get","name","arguments","length","key","add","action","push","run","test","args","i","path","Object","assign"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,qBAAxB;;AAEA,eAAe,MAAMC,IAAN,CAAW;AACtBC,gBAAYC,GAAZ,EAAiBC,IAAjB,EAAuB;;AAEnB,aAAKD,GAAL,GAAWA,GAAX;AACA,aAAKC,IAAL,GAAYA,IAAZ;;AAEA,aAAKC,KAAL,GAAa,EAAb;AACH;;AAEDC,QAAIC,IAAJ,EAAU;;AAEN,YAAIC,UAAUC,MAAV,IAAoB,CAAxB,EAA2B;AACvB,mBAAO,KAAKJ,KAAZ;AACH,SAFD,MAEO;AACH,iBAAK,IAAIK,GAAT,IAAgB,KAAKL,KAArB,EAA4B;AACxB,oBAAIE,QAAQG,GAAZ,EAAiB;AACb,2BAAO,KAAKL,KAAL,CAAWE,IAAX,CAAP;AACH;AACJ;AACJ;AACJ;;AAEDI,QAAIJ,IAAJ,EAAUK,MAAV,EAAkB;;AAEd,YAAID,MAAM,IAAV;AACA,aAAK,IAAID,GAAT,IAAgB,KAAKL,KAArB,EAA4B;AACxB,gBAAIE,QAAQG,GAAZ,EAAiB;AACb,qBAAKL,KAAL,CAAWK,GAAX,EAAgBG,IAAhB,CAAqBD,MAArB;AACAD,sBAAM,KAAN;AACH;AACJ;AACD,YAAIA,GAAJ,EAAS;AACL,iBAAKN,KAAL,CAAWE,IAAX,IAAmB,CAACK,MAAD,CAAnB;AACH;AACJ;;AAED,UAAME,GAAN,CAAUP,IAAV,EAAgB;;AAEZ,aAAK,IAAIG,GAAT,IAAgB,KAAKL,KAArB,EAA4B;AACxB,gBAAIE,QAAQG,GAAZ,EAAiB;AACb,qBAAK,IAAIE,MAAT,IAAmB,KAAKP,KAAL,CAAWK,GAAX,CAAnB,EAAoC;AAChC,wBAAI,WAAWK,IAAX,CAAgBH,MAAhB,CAAJ,EAA6B;;AAEzB;AACA,8BAAM,KAAKZ,SAAL,CAAeY,MAAf,CAAN;AACH,qBAJD,MAIO;;AAEH;AACA,4BAAII,OAAO,EAAX;AACA,6BAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIT,UAAUC,MAA9B,EAAsCQ,GAAtC,EAA2C;AACvCD,iCAAKH,IAAL,CAAUL,UAAUS,CAAV,CAAV;AACH;AACD,8BAAML,OAAO,GAAGI,IAAV,CAAN;AACH;AACJ;AACJ;AACJ;AACJ;;AAED,UAAMhB,SAAN,CAAgBkB,IAAhB,EAAsB;AAClB,cAAMlB,UAAUmB,OAAOC,MAAP,CAAc,KAAKjB,GAAnB,EAAwB,EAACe,MAAMA,IAAP,EAAxB,CAAV,EAAiD,KAAKd,IAAtD,CAAN;AACH;AA7DqB","file":"hook.class.js","sourcesContent":["import {runAction} from \"./../util/http.util\";\n\nexport default class Hook {\n    constructor(ctx, next) {\n\n        this.ctx = ctx;\n        this.next = next;\n\n        this.hooks = {};\n    }\n\n    get(name) {\n\n        if (arguments.length == 0) {\n            return this.hooks;\n        } else {\n            for (let key in this.hooks) {\n                if (name == key) {\n                    return this.hooks[name];\n                }\n            }\n        }\n    }\n\n    add(name, action) {\n\n        let add = true;\n        for (let key in this.hooks) {\n            if (name == key) {\n                this.hooks[key].push(action);\n                add = false;\n            }\n        }\n        if (add) {\n            this.hooks[name] = [action];\n        }\n    }\n\n    async run(name) {\n\n        for (let key in this.hooks) {\n            if (name == key) {\n                for (let action of this.hooks[key]) {\n                    if (/(\\/\\w+)+/.test(action)) {\n\n                        // run action\n                        await this.runAction(action);\n                    } else {\n\n                        // run functions\n                        let args = [];\n                        for (let i = 1; i < arguments.length; i++) {\n                            args.push(arguments[i]);\n                        }\n                        await action(...args);\n                    }\n                }\n            }\n        }\n    }\n\n    async runAction(path) {\n        await runAction(Object.assign(this.ctx, {path: path}), this.next);\n    }\n}\n"]}