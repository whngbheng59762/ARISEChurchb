{"version":3,"sources":["../../src/lib/watcher.class.js"],"names":["paths","that","watcher","watch","appPath","ignored","persistent","startTime","Date","on","_path","stats","relative","rootPath","restart","require","cache","replace","appName","runtimeName","unlink","close","setTimeout"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;AAII,sBAAwB;AAAA,YAAZA,KAAY,uEAAJ,EAAI;AAAA;;;AAEpB,YAAMC,OAAO,IAAb;AACA,YAAMC,UAAU,KAAKA,OAAL,GAAe,mBAASC,KAAT,CAAeH,MAAMI,OAArB,EAA8B;AACzDC,qBAAS,UADgD;AAEzDC,wBAAY;AAF6C,SAA9B,CAA/B;;AAKA,aAAKC,SAAL,GAAiB,IAAIC,IAAJ,EAAjB;;AAEAN,gBAAQO,EAAR,CAAW,KAAX,EAAkB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;;AAEtC,gBAAI,IAAIH,IAAJ,KAAaP,KAAKM,SAAlB,GAA8B,GAAlC,EAAuC;AACnC,gCAAW,eAAKK,QAAL,CAAcZ,MAAMa,QAApB,EAA8BH,KAA9B,CAAX,EAAiD,KAAjD;AACAT,qBAAKa,OAAL;AACH;AACJ,SAND;;AAQAZ,gBAAQO,EAAR,CAAW,QAAX,EAAqB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACzC,4BAAW,eAAKC,QAAL,CAAcZ,MAAMa,QAApB,EAA8BH,KAA9B,CAAX,EAAiD,QAAjD;;AAEA,mBAAOK,QAAQC,KAAR,CAAcN,MAAMO,OAAN,OAAkBjB,MAAMkB,OAAxB,cAAwClB,MAAMmB,WAA9C,OAAd,CAAP;;AAEAlB,iBAAKa,OAAL;AACH,SAND;;AAQAZ,gBAAQO,EAAR,CAAW,QAAX,EAAqB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;;AAEzC,mBAAOI,QAAQC,KAAR,CAAcN,MAAMO,OAAN,OAAkBjB,MAAMkB,OAAxB,cAAwClB,MAAMmB,WAA9C,OAAd,CAAP;AACA,yBAAGC,MAAH,CAAUV,MAAMO,OAAN,OAAkBjB,MAAMkB,OAAxB,cAAwClB,MAAMmB,WAA9C,OAAV,EAAyE,YAAY;AACjF,gCAAW,eAAKP,QAAL,CAAcZ,MAAMa,QAApB,EAA8BH,KAA9B,CAAX,EAAiD,QAAjD;;AAEAT,qBAAKa,OAAL;AACH,aAJD;AAKH,SARD;AASH;;;;kCAES;;AAEN,iBAAKZ,OAAL,CAAamB,KAAb;;AAEAC,uBAAW,YAAY;AACnB;AACH,aAFD,EAEG,GAFH;AAGH","file":"watcher.class.js","sourcesContent":["import chokidar from \"chokidar\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport Koahub from \"./../\";\nimport {watch as watchDebug} from \"./../util/log.util\";\n\nexport default class {\n\n    constructor(paths = {}) {\n\n        const that = this;\n        const watcher = this.watcher = chokidar.watch(paths.appPath, {\n            ignored: /[\\/\\\\]\\./,\n            persistent: true\n        });\n\n        this.startTime = new Date();\n\n        watcher.on('add', function (_path, stats) {\n\n            if (new Date() - that.startTime > 200) {\n                watchDebug(path.relative(paths.rootPath, _path), 'add');\n                that.restart();\n            }\n        });\n\n        watcher.on('change', function (_path, stats) {\n            watchDebug(path.relative(paths.rootPath, _path), 'change');\n\n            delete require.cache[_path.replace(`/${paths.appName}/`, `/${paths.runtimeName}/`)];\n\n            that.restart();\n        });\n\n        watcher.on('unlink', function (_path, stats) {\n\n            delete require.cache[_path.replace(`/${paths.appName}/`, `/${paths.runtimeName}/`)];\n            fs.unlink(_path.replace(`/${paths.appName}/`, `/${paths.runtimeName}/`), function () {\n                watchDebug(path.relative(paths.rootPath, _path), 'unlink');\n\n                that.restart();\n            });\n        });\n    }\n\n    restart() {\n\n        this.watcher.close();\n\n        setTimeout(function () {\n            new Koahub();\n        }, 200);\n    }\n}"]}