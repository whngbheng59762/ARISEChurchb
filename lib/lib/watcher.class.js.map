{"version":3,"sources":["../../src/lib/watcher.class.js"],"names":["paths","that","watcher","watch","appPath","ignored","persistent","startTime","Date","on","_path","stats","relativePath","relative","rootPath","runtimePath","replace","appName","runtimeName","now","restart","masterSend","require","cache","unlink","type","file","koahub","config","id","workers","send","name","setTimeout","msg"],"mappings":"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","file":"watcher.class.js","sourcesContent":["import chokidar from \"chokidar\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport cluster from \"cluster\";\nimport Koahub from \"./../\";\nimport {watch as debug} from \"./../util/log.util\";\n\nexport default class {\n\n    constructor(paths = {}) {\n\n        const that = this;\n        const watcher = chokidar.watch(paths.appPath, {\n            ignored: /[\\/\\\\]\\./,\n            persistent: true\n        });\n\n        this.startTime = new Date();\n\n        watcher.on('add', function (_path, stats) {\n\n            const relativePath = path.relative(paths.rootPath, _path);\n            const runtimePath = _path.replace(`/${paths.appName}/`, `/${paths.runtimeName}/`);\n            const now = new Date();\n\n            if (now - that.startTime > 600) {\n                debug(relativePath, 'add');\n\n                that.restart();\n                that.masterSend('add');\n            } else {\n                that.startTime = now;\n            }\n        });\n\n        watcher.on('change', function (_path, stats) {\n\n            const relativePath = path.relative(paths.rootPath, _path);\n            const runtimePath = _path.replace(`/${paths.appName}/`, `/${paths.runtimeName}/`);\n\n            debug(relativePath, 'change');\n\n            delete require.cache[runtimePath];\n\n            that.restart();\n            that.masterSend('change', runtimePath);\n        });\n\n        watcher.on('unlink', function (_path, stats) {\n\n            const relativePath = path.relative(paths.rootPath, _path);\n            const runtimePath = _path.replace(`/${paths.appName}/`, `/${paths.runtimeName}/`);\n\n            delete require.cache[runtimePath];\n\n            fs.unlink(runtimePath, function () {\n                debug(relativePath, 'unlink');\n\n                that.restart();\n                that.masterSend('unlink', runtimePath);\n            });\n        });\n    }\n\n    // master线程通知子线程\n    masterSend(type, file) {\n        if (koahub.config('cluster_on')) {\n            for (let id in cluster.workers) {\n                cluster.workers[id].send({name: 'file', type: type, file: file});\n            }\n        }\n    }\n\n    // worker线程收到消息通知\n    static workerGet(msg) {\n        if (msg.type == 'change') {\n            delete require.cache[msg.file];\n        }\n\n        if (msg.type == 'add') {\n\n        }\n\n        if (msg.type == 'unlink') {\n            delete require.cache[msg.file];\n        }\n\n        setTimeout(function () {\n            new Koahub();\n        }, 600);\n    }\n\n    restart() {\n\n        setTimeout(function () {\n            new Koahub();\n        }, 600);\n    }\n}"]}