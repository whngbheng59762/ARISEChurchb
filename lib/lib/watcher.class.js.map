{"version":3,"sources":["../../src/lib/watcher.class.js"],"names":["paths","that","watcher","watch","appPath","ignored","persistent","startTime","Date","on","_path","stats","now","relative","rootPath","restart","require","cache","replace","appName","runtimeName","unlink","setTimeout"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;AAII,sBAAwB;AAAA,YAAZA,KAAY,uEAAJ,EAAI;AAAA;;;AAEpB,YAAMC,OAAO,IAAb;AACA,YAAMC,UAAU,mBAASC,KAAT,CAAeH,MAAMI,OAArB,EAA8B;AAC1CC,qBAAS,UADiC;AAE1CC,wBAAY;AAF8B,SAA9B,CAAhB;;AAKA,aAAKC,SAAL,GAAiB,IAAIC,IAAJ,EAAjB;;AAEAN,gBAAQO,EAAR,CAAW,KAAX,EAAkB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;;AAEtC,gBAAMC,MAAM,IAAIJ,IAAJ,EAAZ;AACA,gBAAII,MAAMX,KAAKM,SAAX,GAAuB,GAA3B,EAAgC;AAC5B,gCAAW,eAAKM,QAAL,CAAcb,MAAMc,QAApB,EAA8BJ,KAA9B,CAAX,EAAiD,KAAjD;;AAEAT,qBAAKc,OAAL;AACH,aAJD,MAIO;AACHd,qBAAKM,SAAL,GAAiBK,GAAjB;AACH;AACJ,SAVD;;AAYAV,gBAAQO,EAAR,CAAW,QAAX,EAAqB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACzC,4BAAW,eAAKE,QAAL,CAAcb,MAAMc,QAApB,EAA8BJ,KAA9B,CAAX,EAAiD,QAAjD;;AAEA,mBAAOM,QAAQC,KAAR,CAAcP,MAAMQ,OAAN,OAAkBlB,MAAMmB,OAAxB,cAAwCnB,MAAMoB,WAA9C,OAAd,CAAP;;AAEAnB,iBAAKc,OAAL;AACH,SAND;;AAQAb,gBAAQO,EAAR,CAAW,QAAX,EAAqB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;;AAEzC,mBAAOK,QAAQC,KAAR,CAAcP,MAAMQ,OAAN,OAAkBlB,MAAMmB,OAAxB,cAAwCnB,MAAMoB,WAA9C,OAAd,CAAP;AACA,yBAAGC,MAAH,CAAUX,MAAMQ,OAAN,OAAkBlB,MAAMmB,OAAxB,cAAwCnB,MAAMoB,WAA9C,OAAV,EAAyE,YAAY;AACjF,gCAAW,eAAKP,QAAL,CAAcb,MAAMc,QAApB,EAA8BJ,KAA9B,CAAX,EAAiD,QAAjD;;AAEAT,qBAAKc,OAAL;AACH,aAJD;AAKH,SARD;AASH;;;;kCAES;;AAENO,uBAAW,YAAY;AACnB;AACH,aAFD,EAEG,GAFH;AAGH","file":"watcher.class.js","sourcesContent":["import chokidar from \"chokidar\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport Koahub from \"./../\";\nimport {watch as watchDebug} from \"./../util/log.util\";\n\nexport default class {\n\n    constructor(paths = {}) {\n\n        const that = this;\n        const watcher = chokidar.watch(paths.appPath, {\n            ignored: /[\\/\\\\]\\./,\n            persistent: true\n        });\n\n        this.startTime = new Date();\n\n        watcher.on('add', function (_path, stats) {\n\n            const now = new Date();\n            if (now - that.startTime > 200) {\n                watchDebug(path.relative(paths.rootPath, _path), 'add');\n\n                that.restart();\n            } else {\n                that.startTime = now;\n            }\n        });\n\n        watcher.on('change', function (_path, stats) {\n            watchDebug(path.relative(paths.rootPath, _path), 'change');\n\n            delete require.cache[_path.replace(`/${paths.appName}/`, `/${paths.runtimeName}/`)];\n\n            that.restart();\n        });\n\n        watcher.on('unlink', function (_path, stats) {\n\n            delete require.cache[_path.replace(`/${paths.appName}/`, `/${paths.runtimeName}/`)];\n            fs.unlink(_path.replace(`/${paths.appName}/`, `/${paths.runtimeName}/`), function () {\n                watchDebug(path.relative(paths.rootPath, _path), 'unlink');\n\n                that.restart();\n            });\n        });\n    }\n\n    restart() {\n\n        setTimeout(function () {\n            new Koahub();\n        }, 200);\n    }\n}"]}