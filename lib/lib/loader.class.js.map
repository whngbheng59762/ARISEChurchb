{"version":3,"sources":["../../src/lib/loader.class.js"],"names":["path","fs","constructor","runtimePath","options","loaders","Array","option","concat","loader","walk","dir","resolve","exist","existsSync","files","readdirSync","list","file","statSync","isDirectory","push","root","Error","suffix","prefix","filter","paths","key","name","relative","regExp","RegExp","test","slice","lastIndexOf","forEach","v","i","replace","lib","require","hasOwnProperty","Object","keys","length","default","arr1","arr2","arr"],"mappings":"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","file":"loader.class.js","sourcesContent":["import path from \"path\";\nimport fs from \"fs\";\n\nexport default class {\n\n    constructor(runtimePath, options) {\n\n        // 启动目录\n        this.runtimePath = runtimePath;\n\n        let loaders = [];\n\n        if (options instanceof Array) {\n            for (let option of options) {\n                loaders = this.concat(loaders, this.loader(option));\n            }\n        } else {\n            loaders = this.loader(options);\n        }\n\n        return loaders;\n    }\n\n    walk(dir) {\n\n        dir = path.resolve(this.runtimePath, dir);\n\n        const exist = fs.existsSync(dir);\n        if (!exist) {\n            return;\n        }\n\n        const files = fs.readdirSync(dir);\n        let list = [];\n\n        for (let file of files) {\n            if (fs.statSync(path.resolve(dir, file)).isDirectory()) {\n                list = list.concat(this.walk(path.resolve(dir, file)));\n            } else {\n                list.push(path.resolve(dir, file));\n            }\n        }\n\n        return list;\n    }\n\n    loader(options) {\n\n        if (typeof options == 'undefined') {\n            options = {};\n        }\n\n        let loaders = [];\n        if (typeof options.root !== 'string') {\n            throw Error('root must be specified');\n        }\n\n        options.suffix = options.suffix || '.js';\n        options.prefix = options.prefix || '';\n        options.filter = options.filter || [];\n\n        const paths = this.walk(options.root);\n        if (!paths) {\n            return;\n        }\n\n        for (let key in paths) {\n\n            let name = path.relative(path.resolve(this.runtimePath, options.root), paths[key]);\n            let regExp = new RegExp(`${options.suffix}$`);\n\n            if (regExp.test(name)) {\n                name = name.slice(0, name.lastIndexOf(options.suffix));\n\n                options.filter.forEach(function (v, i) {\n                    name = name.replace(v, '');\n                });\n\n                name = options.prefix + name;\n                name = name.replace(/\\\\/g, '/');\n\n                let lib = require(paths[key]);\n                if (lib.hasOwnProperty('default') && Object.keys(lib).length == 1) {\n                    loaders[name] = lib.default;\n                } else {\n                    loaders[name] = lib;\n                }\n            }\n        }\n\n        return loaders;\n    }\n\n    concat(arr1, arr2) {\n\n        let arr = arr1;\n\n        for (let key in arr2) {\n            arr[key] = arr2[key];\n        }\n\n        return arr;\n    }\n}\n"]}