{"version":3,"sources":["../../src/lib/loader.class.js"],"names":["Loader","app","options","loaders","Array","option","concat","loader","dir","resolve","exist","existsSync","files","readdirSync","list","file","statSync","isDirectory","walk","push","root","suffix","prefix","filter","paths","key","name","relative","regExp","RegExp","test","slice","lastIndexOf","forEach","v","i","replace","lib","require","hasOwnProperty","length","default","arr1","arr2","arr"],"mappings":"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","file":"loader.class.js","sourcesContent":["import path from \"path\";\nimport fs from \"fs\";\nimport assert from \"assert\";\n\nexport default class Loader {\n\n    constructor(app, options) {\n\n        // 启动目录\n        this.app = app;\n\n        let loaders = [];\n\n        if (options instanceof Array) {\n            for (let option of options) {\n                loaders = this.concat(loaders, this.loader(option));\n            }\n        } else {\n            loaders = this.loader(options);\n        }\n\n        return loaders;\n    }\n\n    walk(dir) {\n\n        dir = path.resolve(this.app, dir);\n\n        const exist = fs.existsSync(dir);\n        if (!exist) {\n            return;\n        }\n\n        const files = fs.readdirSync(dir);\n        let list = [];\n\n        for (let file of files) {\n            if (fs.statSync(path.resolve(dir, file)).isDirectory()) {\n                list = list.concat(this.walk(path.resolve(dir, file)));\n            } else {\n                list.push(path.resolve(dir, file));\n            }\n        }\n\n        return list;\n    }\n\n    loader(options = {}) {\n\n        assert(typeof options.root === 'string', 'root must be specified');\n\n        options.suffix = options.suffix || '.js';\n        options.prefix = options.prefix || '';\n        options.filter = options.filter || [];\n\n        let loaders = [];\n        let paths = this.walk(options.root);\n        if (!paths) {\n            return;\n        }\n\n        for (let key in paths) {\n\n            let name = path.relative(path.resolve(this.app, options.root), paths[key]);\n            let regExp = new RegExp(`${options.suffix}$`);\n\n            if (regExp.test(name)) {\n                name = name.slice(0, name.lastIndexOf(options.suffix));\n\n                options.filter.forEach(function (v, i) {\n                    name = name.replace(v, '');\n                });\n\n                name = options.prefix + name;\n                name = name.replace(/\\\\/g, '/');\n\n                let lib = require(paths[key]);\n                if (lib.hasOwnProperty('default') && Object.keys(lib).length == 1) {\n                    loaders[name] = lib.default;\n                } else {\n                    loaders[name] = lib;\n                }\n            }\n        }\n\n        return loaders;\n    }\n\n    concat(arr1, arr2) {\n\n        let arr = arr1;\n\n        for (let key in arr2) {\n            arr[key] = arr2[key];\n        }\n\n        return arr;\n    }\n}\n"]}