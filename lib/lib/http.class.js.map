{"version":3,"sources":["../../src/lib/http.class.js"],"names":["ctx","next","arguments","length","Error","koahub","config","hook","cookie","cookies","method","header","toUpperCase","ip","name","value","get","set","code","status","query","post","file","session","state","host","url","redirect","filename","relative","dirname","view","createReadStream","path","args","data","body","msg","json","tpl","locals","render"],"mappings":"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","file":"http.class.js","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport {runAction} from \"./../util/http.util\";\n\nexport default class {\n\n    constructor(ctx, next) {\n\n        if (arguments.length == 0) {\n            throw new Error('SyntaxError: missing super(ctx) call in constructor');\n            return;\n        }\n        if (arguments.length == 1) {\n            throw new Error('SyntaxError: missing super(next) call in constructor');\n            return;\n        }\n        this.ctx = ctx;\n        this.next = next;\n\n        if (koahub.config('hook')) {\n            this.hook = koahub.hook;\n        }\n\n        this.cookie = this.ctx.cookies;\n    }\n\n    method() {\n        return this.ctx.method;\n    }\n\n    isGet() {\n\n        if (this.ctx.method == 'GET') {\n            return true;\n        }\n        return false;\n    }\n\n    isPost() {\n\n        if (this.ctx.method == 'POST') {\n            return true;\n        }\n        return false;\n    }\n\n    isAjax() {\n        return this.header('X-Requested-With') === 'XMLHttpRequest';\n    }\n\n    isPjax() {\n        return this.header('X-PJAX') || false;\n    }\n\n    isMethod(method) {\n        return this.ctx.method === method.toUpperCase();\n    }\n\n    ip() {\n        return this.ctx.ip;\n    }\n\n    header(name, value) {\n\n        switch (arguments.length) {\n            case 1:\n                return this.ctx.get(name);\n            case 2:\n                this.ctx.set(name, value);\n        }\n    }\n\n    status(code) {\n\n        switch (arguments.length) {\n            case 0:\n                return this.ctx.status;\n            case 1:\n                this.ctx.status = code;\n        }\n    }\n\n    get(name, value) {\n\n        switch (arguments.length) {\n            case 0:\n                return this.ctx.query;\n            case 1:\n\n                if (name == null) {\n                    this.ctx.query = {};\n                    break;\n                }\n                return this.ctx.query[name];\n            case 2:\n\n                if (value == null) {\n                    delete this.ctx.query[name];\n                    break;\n                }\n                this.ctx.query[name] = value;\n        }\n    }\n\n    post(name, value) {\n\n        switch (arguments.length) {\n            case 0:\n                return this.ctx.post;\n            case 1:\n\n                if (name == null) {\n                    this.ctx.post = {};\n                    break;\n                }\n                return this.ctx.post[name];\n            case 2:\n\n                if (value == null) {\n                    delete this.ctx.post[name];\n                    break;\n                }\n                this.ctx.post[name] = value;\n        }\n    }\n\n    file(name, value) {\n\n        switch (arguments.length) {\n            case 0:\n                return this.ctx.file;\n            case 1:\n\n                if (name == null) {\n                    this.ctx.file = {};\n                    break;\n                }\n                return this.ctx.file[name];\n            case 2:\n\n                if (value == null) {\n                    delete this.ctx.file[name];\n                    break;\n                }\n                this.ctx.file[name] = value;\n        }\n    }\n\n    session(name, value) {\n\n        switch (arguments.length) {\n            case 0:\n                return this.ctx.session;\n            case 1:\n\n                if (name == null) {\n                    this.ctx.session = {};\n                    break;\n                }\n                return this.ctx.session[name];\n            case 2:\n\n                if (value == null) {\n                    delete this.ctx.session[name];\n                    break;\n                }\n                this.ctx.session[name] = value;\n        }\n    }\n\n    state(name, value) {\n\n        switch (arguments.length) {\n            case 0:\n                return this.ctx.state;\n            case 1:\n\n                if (name == null) {\n                    this.ctx.state = {};\n                    break;\n                }\n                return this.ctx.state[name];\n            case 2:\n\n                if (value == null) {\n                    delete this.ctx.state[name];\n                    break;\n                }\n                this.ctx.state[name] = value;\n        }\n    }\n\n    host() {\n        return this.ctx.host;\n    }\n\n    redirect(url) {\n        this.ctx.redirect(url);\n    }\n\n    download(file) {\n\n        const filename = path.relative(path.dirname(file), file);\n\n        this.header('Content-disposition', 'attachment; filename=' + filename);\n        this.view(fs.createReadStream(file));\n    }\n\n    async action(path, ...args) {\n        return await runAction(Object.assign(this.ctx, {path: path}), this.next, ...args);\n    }\n\n    view(data) {\n        this.ctx.body = data;\n    }\n\n    json(data, msg, code) {\n\n        let body = {};\n\n        switch (arguments.length) {\n            case 1:\n                body = {\n                    data: data,\n                }\n                break;\n            case 2:\n                body = {\n                    data: data,\n                    msg: msg,\n                }\n                break;\n            case 3:\n                body = {\n                    data: data,\n                    msg: msg,\n                    code: code\n                }\n                break;\n        }\n\n        this.ctx.body = body;\n    }\n\n    success(data, msg) {\n        this.json(data, msg, 1);\n    }\n\n    error(data, msg) {\n        this.json(data, msg, 0);\n    }\n\n    async render(tpl, locals) {\n        await this.ctx.render(tpl, locals);\n    }\n}\n"]}