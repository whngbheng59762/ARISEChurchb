{"version":3,"sources":["../src/index.js"],"names":["options","global","koahub","merge","app","init","configs","loader","config","name","undefined","index","rootPath","process","cwd","appName","runtime","appPath","resolve","runtimePath","paths","runtimeName","http","controllers","controller","hook","utils","util","models","model","services","service","use","loadConfigs","loadPaths","loadControllers","loadModels","loadServices","loadUtils","loadHooks","loadMiddlewares","server","Server","callback","on","err","ctx","reason","promise","skip","path","test","port","loadHttpMiddlewares","handleError","listen","started","getServer","loadWatcher","console","log","green","version"],"mappings":"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","file":"index.js","sourcesContent":["import path from \"path\";\nimport http from \"http\";\nimport Koa from \"koa\";\nimport logger from \"koa-logger\";\nimport favicon from \"koa-favicon\";\nimport lodash from \"lodash\";\nimport colors from \"colors/safe\";\nimport packageFile from \"./../package.json\";\nimport Loader from \"./lib/loader.class\";\nimport Hook from \"./lib/hook.class\";\nimport Http from \"./data/http.class\";\nimport Watcher from \"./lib/watcher.class\";\nimport config from \"./config/index.config\";\nimport configDefault from \"./config/default.config\";\nimport {httpMiddleware} from \"./middleware/http.middleware\";\nimport {debug as captureDebug} from \"./util/log.util\";\n\nexport default class {\n\n    constructor(options = {}) {\n\n        // 加载全局变量\n        global.koahub = lodash.merge({}, packageFile);\n        // new Koa()\n        koahub.app = new Koa();\n\n        this.init();\n    }\n\n    loadConfigs() {\n\n        koahub.configs = new Loader(configDefault.loader.config);\n        // 优化config\n        koahub.config = function (name) {\n            if (name == undefined) {\n                return Object.assign(config, koahub.configs.index);\n            } else {\n                return Object.assign(config, koahub.configs.index)[name];\n            }\n        };\n    }\n\n    loadPaths() {\n\n        const rootPath = process.cwd();\n        const appName = configDefault.app;\n        const runtime = configDefault.runtime;\n        const appPath = path.resolve(rootPath, appName);\n        const runtimePath = path.resolve(rootPath, runtime);\n\n        koahub.paths = {\n            rootPath: rootPath,\n            appName: appName,\n            appPath: appPath,\n            runtimeName: runtime,\n            runtimePath: runtimePath\n        };\n    }\n\n    loadWatcher(paths) {\n\n        // watch依赖config\n        if (koahub.config('watch_on')) {\n            new Watcher(paths);\n        }\n    }\n\n    loadControllers() {\n\n        // controller依赖http\n        koahub.http = Http;\n        koahub.controllers = new Loader(configDefault.loader.controller);\n    }\n\n    loadHooks() {\n\n        koahub.hook = new Hook();\n    }\n\n    loadUtils() {\n\n        koahub.utils = new Loader(configDefault.loader.util);\n    }\n\n    loadModels() {\n\n        koahub.models = new Loader(configDefault.loader.model);\n    }\n\n    loadServices() {\n\n        koahub.services = new Loader(configDefault.loader.service);\n    }\n\n    loadMiddlewares() {\n\n        // log middleware\n        if (koahub.config('log_on')) {\n            koahub.app.use(logger());\n        }\n\n        // favicon middleware\n        koahub.app.use(favicon(koahub.config('favicon')));\n    }\n\n    init() {\n\n        this.loadConfigs();\n        this.loadPaths();\n        this.loadControllers();\n        this.loadModels();\n        this.loadServices();\n        this.loadUtils();\n        this.loadHooks();\n        this.loadMiddlewares();\n    }\n\n    // 支持soket.io\n    getServer() {\n\n        const server = http.Server(koahub.app.callback());\n        return this.server = server;\n    }\n\n    // 支持自定义中间件\n    getKoa() {\n\n        return koahub.app;\n    }\n\n    handleError() {\n\n        // 监控错误日志\n        koahub.app.on(\"error\", function (err, ctx) {\n            captureDebug(err);\n        });\n\n        // 捕获promise reject错误\n        process.on('unhandledRejection', function (reason, promise) {\n            captureDebug(reason);\n        });\n\n        // 捕获未知错误\n        process.on('uncaughtException', function (err) {\n            captureDebug(err);\n        });\n    }\n\n    loadHttpMiddlewares() {\n\n        // 加载http中间件\n        koahub.app.use(httpMiddleware().skip(function (ctx) {\n\n            const path = ctx.path;\n\n            // path验证，资源文件跳过中间件\n            if (/[^\\/]+\\.+\\w+$/.test(path)) {\n                return true;\n            }\n\n            // path验证，无效跳过中间件\n            if (/\\/\\//.test(path)) {\n                return true;\n            }\n\n            return false;\n        }));\n    }\n\n    run(port) {\n\n        this.loadHttpMiddlewares();\n        this.handleError();\n\n        if (!port) {\n            port = koahub.config('port');\n        }\n\n        if (this.server) {\n            this.server.listen(port, this.started(port));\n        } else {\n            this.getServer().listen(port, this.started(port));\n        }\n    }\n\n    started(port) {\n\n        this.loadWatcher(koahub.paths);\n\n        console.log(colors.green(`[Koahubjs] Koahubjs version: ${koahub.version}`));\n        console.log(colors.green(`[Koahubjs] Koahubjs website: http://js.koahub.com`));\n        console.log(colors.green(`[Koahubjs] Server running at http://127.0.0.1:${port}`));\n    }\n}"]}