{"version":3,"sources":["../../src/util/watch.util.js"],"names":["watch","mkdirsSync","dirname","mode","existsSync","mkdirSync","delDirs","path","files","readdirSync","forEach","file","index","curPath","statSync","isDirectory","unlinkSync","rmdirSync","callback","watcher","app","ignored","persistent","ignoreInitial","on","filePath","stats","fileRuntimePath","replace","runtime","runtimePath","dirPath","dirRuntimePath"],"mappings":";;;;;kBAiCwBA,K;;AAjCxB;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,IAA7B,EAAmC;AAC/B,QAAI,aAAGC,UAAH,CAAcF,OAAd,CAAJ,EAA4B;AACxB,eAAO,IAAP;AACH,KAFD,MAEO;AACH,YAAID,WAAW,eAAKC,OAAL,CAAaA,OAAb,CAAX,EAAkCC,IAAlC,CAAJ,EAA6C;AACzC,yBAAGE,SAAH,CAAaH,OAAb,EAAsBC,IAAtB;AACA,mBAAO,IAAP;AACH;AACJ;AACJ;;AAED,SAASG,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,QAAIC,QAAQ,EAAZ;AACA,QAAI,aAAGJ,UAAH,CAAcG,IAAd,CAAJ,EAAyB;AACrBC,gBAAQ,aAAGC,WAAH,CAAeF,IAAf,CAAR;AACAC,cAAME,OAAN,CAAc,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACjC,gBAAIC,UAAUN,OAAO,GAAP,GAAaI,IAA3B;AACA,gBAAI,aAAGG,QAAH,CAAYD,OAAZ,EAAqBE,WAArB,EAAJ,EAAwC;AAAE;AACtCT,wBAAQO,OAAR;AACH,aAFD,MAEO;AAAE;AACL,6BAAGG,UAAH,CAAcH,OAAd;AACH;AACJ,SAPD;AAQA,qBAAGI,SAAH,CAAaV,IAAb;AACH;AACJ;;AAEc,SAASP,KAAT,CAAekB,QAAf,EAAyB;;AAEpC,QAAMC,UAAU,mBAASnB,KAAT,CAAe,gBAAOoB,GAAtB,EAA2B;AACvCC,iBAAS,UAD8B;AAEvCC,oBAAY,IAF2B;AAGvCC,uBAAe;AAHwB,KAA3B,CAAhB;;AAMAJ,YAAQK,EAAR,CAAW,KAAX,EAAkB,UAAUC,QAAV,EAAoBC,KAApB,EAA2B;;AAEzC,YAAMC,kBAAkBF,SAASG,OAAT,CAAoB,gBAAOR,GAA3B,QAAsC,gBAAOS,OAA7C,OAAxB;AACA5B,mBAAW,eAAKC,OAAL,CAAayB,eAAb,CAAX;;AAEA,wBAAMF,QAAN,EAAgB,KAAhB;AACAP,iBAASO,QAAT;AACH,KAPD;;AASAN,YAAQK,EAAR,CAAW,QAAX,EAAqB,UAAUC,QAAV,EAAoBC,KAApB,EAA2B;;AAE5C,wBAAMD,QAAN,EAAgB,QAAhB;AACAP,iBAASO,QAAT;AACH,KAJD;;AAMAN,YAAQK,EAAR,CAAW,QAAX,EAAqB,UAAUC,QAAV,EAAoBC,KAApB,EAA2B;;AAE5C,YAAMI,cAAcL,SAASG,OAAT,CAAoB,gBAAOR,GAA3B,QAAsC,gBAAOS,OAA7C,OAApB;AACA,qBAAGb,UAAH,CAAcc,WAAd;;AAEA,wBAAML,QAAN,EAAgB,QAAhB;AACAP,iBAASO,QAAT,EAAmB,KAAnB;AACH,KAPD;;AASAN,YAAQK,EAAR,CAAW,WAAX,EAAwB,UAAUO,OAAV,EAAmB;;AAEvC,YAAMC,iBAAiBD,QAAQH,OAAR,CAAmB,gBAAOR,GAA1B,QAAqC,gBAAOS,OAA5C,OAAvB;AACAvB,gBAAQ0B,cAAR;AACH,KAJD;AAKH","file":"watch.util.js","sourcesContent":["import chokidar from \"chokidar\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport {watch as debug} from \"./../util/log.util\";\nimport config from \"./../config/index.config\";\n\nfunction mkdirsSync(dirname, mode) {\n    if (fs.existsSync(dirname)) {\n        return true;\n    } else {\n        if (mkdirsSync(path.dirname(dirname), mode)) {\n            fs.mkdirSync(dirname, mode);\n            return true;\n        }\n    }\n}\n\nfunction delDirs(path) {\n    let files = [];\n    if (fs.existsSync(path)) {\n        files = fs.readdirSync(path);\n        files.forEach(function (file, index) {\n            let curPath = path + \"/\" + file;\n            if (fs.statSync(curPath).isDirectory()) { // recurse\n                delDirs(curPath);\n            } else { // delete file\n                fs.unlinkSync(curPath);\n            }\n        });\n        fs.rmdirSync(path);\n    }\n};\n\nexport default function watch(callback) {\n\n    const watcher = chokidar.watch(config.app, {\n        ignored: /[\\/\\\\]\\./,\n        persistent: true,\n        ignoreInitial: true\n    });\n\n    watcher.on('add', function (filePath, stats) {\n\n        const fileRuntimePath = filePath.replace(`${config.app}/`, `${config.runtime}/`);\n        mkdirsSync(path.dirname(fileRuntimePath));\n\n        debug(filePath, 'add');\n        callback(filePath);\n    });\n\n    watcher.on('change', function (filePath, stats) {\n\n        debug(filePath, 'change');\n        callback(filePath);\n    });\n\n    watcher.on('unlink', function (filePath, stats) {\n\n        const runtimePath = filePath.replace(`${config.app}/`, `${config.runtime}/`);\n        fs.unlinkSync(runtimePath);\n\n        debug(filePath, 'unlink');\n        callback(filePath, false);\n    });\n\n    watcher.on('unlinkDir', function (dirPath) {\n\n        const dirRuntimePath = dirPath.replace(`${config.app}/`, `${config.runtime}/`);\n        delDirs(dirRuntimePath);\n    });\n}"]}